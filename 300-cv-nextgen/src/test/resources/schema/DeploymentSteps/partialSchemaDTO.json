{
  "schema": {
    "type": "object",
    "required": [
      "identifier",
      "name",
      "type"
    ],
    "properties": {
      "description": {
        "type": "string"
      },
      "failureStrategies": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/cvng/FailureStrategyConfig"
        }
      },
      "identifier": {
        "type": "string",
        "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
      },
      "name": {
        "type": "string",
        "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
      },
      "timeout": {
        "type": "string",
        "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
      },
      "type": {
        "type": "string"
      },
      "when": {
        "$ref": "#/definitions/cvng/StepWhenCondition"
      }
    },
    "$schema": "http://json-schema.org/draft-07/schema#",
    "allOf": [
      {
        "if": {
          "properties": {
            "type": {
              "const": "Barrier"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/BarrierStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "FlagConfiguration"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/FlagConfigurationStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "HarnessApproval"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/HarnessApprovalStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "Http"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/HttpStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "JiraApproval"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/JiraApprovalStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "JiraCreate"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/JiraCreateStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "JiraUpdate"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/JiraUpdateStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "ServiceNowApproval"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/ServiceNowApprovalStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "ShellScript"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/ShellScriptStepInfo"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "type": {
              "const": "Verify"
            }
          }
        },
        "then": {
          "properties": {
            "spec": {
              "$ref": "#/definitions/cvng/CVNGStepInfo"
            }
          }
        }
      }
    ],
    "definitions": {
      "cvng": {
        "AbortFailureActionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/FailureStrategyActionConfig"
            },
            {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Abort"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "AddRuleYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/AddRuleYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "AddRule"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "AddRuleYamlSpec": {
          "type": "object",
          "properties": {
            "clauses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cvng/Clause"
              }
            },
            "distribution": {
              "$ref": "#/definitions/cvng/DistributionYamlSpec"
            },
            "priority": {
              "type": "integer",
              "format": "int32"
            },
            "serve": {
              "$ref": "#/definitions/cvng/Serve"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "AddSegmentToVariationTargetMapYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/AddSegmentToVariationTargetMapYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "AddSegmentToVariationTargetMap"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "AddSegmentToVariationTargetMapYamlSpec": {
          "type": "object",
          "required": [
            "segments",
            "variation"
          ],
          "properties": {
            "segments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "variation": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "AddTargetsToVariationTargetMapYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/AddTargetsToVariationTargetMapYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "AddTargetsToVariationTargetMap"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "AddTargetsToVariationTargetMapYamlSpec": {
          "type": "object",
          "required": [
            "targets",
            "variation"
          ],
          "properties": {
            "targets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "variation": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ApproverInputInfo": {
          "type": "object",
          "properties": {
            "defaultValue": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "Approvers": {
          "type": "object",
          "required": [
            "disallowPipelineExecutor",
            "minimumCount",
            "userGroups"
          ],
          "properties": {
            "disallowPipelineExecutor": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "minimumCount": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "userGroups": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "BarrierStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "barrierRef"
              ],
              "properties": {
                "barrierRef": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "BlueGreenVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {
                "trafficSplitPercentage": {
                  "type": "string",
                  "description": "Example: 50, You can put max upto 50."
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "CVNGStepInfo": {
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Bluegreen"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/BlueGreenVerificationJobSpec"
                  }
                }
              },
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "LoadTest"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/TestVerificationJobSpec"
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string"
                }
              },
              "if": {
                "properties": {
                  "type": {
                    "const": "Canary"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/CanaryVerificationJobSpec"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Rolling"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/ImprovisedCanaryVerificationJobSpec"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string"
            }
          }
        },
        "CanaryVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {
                "trafficSplitPercentage": {
                  "type": "string",
                  "description": "Example: 50, You can put max upto 50."
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "Clause": {
          "type": "object",
          "required": [
            "attribute",
            "id",
            "negate",
            "op",
            "values"
          ],
          "properties": {
            "attribute": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "negate": {
              "type": "boolean"
            },
            "op": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ClauseYamlSpec": {
          "type": "object",
          "required": [
            "op",
            "values"
          ],
          "properties": {
            "attribute": {
              "type": "string"
            },
            "op": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "Condition": {
          "type": "object",
          "required": [
            "key",
            "operator",
            "value"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "enum": [
                "equals",
                "not equals",
                "in",
                "not in"
              ]
            },
            "value": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "CriteriaSpec": {
          "type": "object",
          "discriminator": "type",
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "CriteriaSpecWrapper": {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Jexl",
                "KeyValues"
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Jexl"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/JexlCriteriaSpec"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "KeyValues"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/KeyValuesCriteriaSpec"
                  }
                }
              }
            }
          ]
        },
        "Distribution": {
          "type": "object",
          "required": [
            "bucketBy",
            "variations"
          ],
          "properties": {
            "bucketBy": {
              "type": "string"
            },
            "variations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cvng/WeightedVariation"
              }
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "DistributionYamlSpec": {
          "type": "object",
          "required": [
            "bucketBy"
          ],
          "properties": {
            "bucketBy": {
              "type": "string"
            },
            "clauses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cvng/ClauseYamlSpec"
              }
            },
            "variations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cvng/VariationYamlSpec"
              }
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ExecutionTarget": {
          "type": "object",
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "host": {
              "type": "string"
            },
            "workingDirectory": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "FailureStrategyActionConfig": {
          "type": "object",
          "required": [
            "type"
          ],
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Ignore",
                "Retry",
                "MarkAsSuccess",
                "Abort",
                "StageRollback",
                "StepGroupRollback",
                "ManualIntervention"
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "FailureStrategyConfig": {
          "type": "object",
          "required": [
            "onFailure"
          ],
          "properties": {
            "onFailure": {
              "$ref": "#/definitions/cvng/OnFailureConfig"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "FlagConfigurationStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "environment",
                "feature",
                "instructions"
              ],
              "properties": {
                "environment": {
                  "type": "string"
                },
                "feature": {
                  "type": "string"
                },
                "instructions": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/cvng/PatchInstruction"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                      "minLength": 1
                    }
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "HarnessApprovalStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "approvalMessage",
                "approvers",
                "includePipelineExecutionHistory"
              ],
              "properties": {
                "approvalMessage": {
                  "type": "string"
                },
                "approverInputs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/cvng/ApproverInputInfo"
                  }
                },
                "approvers": {
                  "$ref": "#/definitions/cvng/Approvers"
                },
                "includePipelineExecutionHistory": {
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "HoldingScope": {
          "type": "object",
          "required": [
            "nodeSetupId",
            "scope"
          ],
          "properties": {
            "nodeSetupId": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "HttpHeaderConfig": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "HttpStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "method",
                "url"
              ],
              "properties": {
                "assertion": {
                  "type": "string"
                },
                "delegateSelectors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                      "minLength": 1
                    }
                  ]
                },
                "headers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/cvng/HttpHeaderConfig"
                  }
                },
                "method": {
                  "type": "string"
                },
                "outputVariables": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/cvng/NumberNGVariable"
                      },
                      {
                        "$ref": "#/definitions/cvng/SecretNGVariable"
                      },
                      {
                        "$ref": "#/definitions/cvng/StringNGVariable"
                      }
                    ]
                  }
                },
                "requestBody": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "IgnoreFailureActionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/FailureStrategyActionConfig"
            },
            {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Ignore"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ImprovisedCanaryVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {
                "trafficSplitPercentage": {
                  "type": "string",
                  "description": "Example: 50, You can put max upto 50."
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "JexlCriteriaSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/CriteriaSpec"
            },
            {
              "type": "object",
              "required": [
                "expression"
              ],
              "properties": {
                "expression": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "JiraApprovalStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "approvalCriteria",
                "connectorRef",
                "issueKey"
              ],
              "properties": {
                "approvalCriteria": {
                  "$ref": "#/definitions/cvng/CriteriaSpecWrapper"
                },
                "connectorRef": {
                  "type": "string"
                },
                "delegateSelectors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                      "minLength": 1
                    }
                  ]
                },
                "issueKey": {
                  "type": "string"
                },
                "rejectionCriteria": {
                  "$ref": "#/definitions/cvng/CriteriaSpecWrapper"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "JiraCreateStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "connectorRef",
                "issueType",
                "projectKey"
              ],
              "properties": {
                "connectorRef": {
                  "type": "string"
                },
                "delegateSelectors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                      "minLength": 1
                    }
                  ]
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/cvng/JiraField"
                  }
                },
                "issueType": {
                  "type": "string"
                },
                "projectKey": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "JiraField": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "value": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "JiraUpdateStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "connectorRef",
                "issueKey"
              ],
              "properties": {
                "connectorRef": {
                  "type": "string"
                },
                "delegateSelectors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                      "minLength": 1
                    }
                  ]
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/cvng/JiraField"
                  }
                },
                "issueKey": {
                  "type": "string"
                },
                "transitionTo": {
                  "$ref": "#/definitions/cvng/TransitionTo"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "KeyValuesCriteriaSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/CriteriaSpec"
            },
            {
              "type": "object",
              "required": [
                "conditions"
              ],
              "properties": {
                "conditions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/cvng/Condition"
                  }
                },
                "matchAnyCondition": {
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ManualFailureSpecConfig": {
          "type": "object",
          "required": [
            "onTimeout",
            "timeout"
          ],
          "properties": {
            "onTimeout": {
              "$ref": "#/definitions/cvng/OnTimeoutConfig"
            },
            "timeout": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ManualInterventionFailureActionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/FailureStrategyActionConfig"
            },
            {
              "type": "object",
              "required": [
                "spec",
                "type"
              ],
              "properties": {
                "spec": {
                  "readOnly": true,
                  "$ref": "#/definitions/cvng/ManualFailureSpecConfig"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "ManualIntervention"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "MarkAsSuccessFailureActionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/FailureStrategyActionConfig"
            },
            {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "MarkAsSuccess"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "NGVariable": {
          "type": "object",
          "discriminator": "type",
          "properties": {
            "description": {
              "type": "string"
            },
            "metadata": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "required": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "String",
                "Number",
                "Secret"
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "NumberNGVariable": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/NGVariable"
            },
            {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "default": {
                  "type": "number",
                  "format": "double"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Number"
                  ]
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "number",
                      "format": "double"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "OnFailureConfig": {
          "type": "object",
          "required": [
            "action",
            "errors"
          ],
          "properties": {
            "action": {
              "oneOf": [
                {
                  "$ref": "#/definitions/cvng/AbortFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/IgnoreFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/ManualInterventionFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/MarkAsSuccessFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/RetryFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/StageRollbackFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/StepGroupFailureActionConfig"
                }
              ]
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Unknown",
                  "AllErrors",
                  "Authentication",
                  "Connectivity",
                  "Timeout",
                  "Authorization",
                  "Verification",
                  "DelegateProvisioning"
                ]
              }
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "OnRetryFailureConfig": {
          "type": "object",
          "properties": {
            "action": {
              "oneOf": [
                {
                  "$ref": "#/definitions/cvng/AbortFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/IgnoreFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/ManualInterventionFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/MarkAsSuccessFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/RetryFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/StageRollbackFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/StepGroupFailureActionConfig"
                }
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "OnTimeoutConfig": {
          "type": "object",
          "properties": {
            "action": {
              "oneOf": [
                {
                  "$ref": "#/definitions/cvng/AbortFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/IgnoreFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/ManualInterventionFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/MarkAsSuccessFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/RetryFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/StageRollbackFailureActionConfig"
                },
                {
                  "$ref": "#/definitions/cvng/StepGroupFailureActionConfig"
                }
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "PatchInstruction": {
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "SetFeatureFlagState",
                "SetOnVariation",
                "SetOffVariation",
                "SetDefaultVariations",
                "AddRule",
                "UpdateRule",
                "AddTargetsToVariationTargetMap",
                "RemoveTargetsToVariationTargetMap",
                "AddSegmentToVariationTargetMap",
                "RemoveSegmentsToVariationTargetMap"
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "RemoveSegmentToVariationTargetMapYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/RemoveSegmentToVariationTargetMapYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "RemoveSegmentToVariationTargetMap"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "RemoveSegmentToVariationTargetMapYamlSpec": {
          "type": "object",
          "required": [
            "segments",
            "variation"
          ],
          "properties": {
            "segments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "variation": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "RemoveTargetsToVariationTargetMapYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/RemoveTargetsToVariationTargetMapYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "RemoveTargetsToVariationTargetMap"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "RemoveTargetsToVariationTargetMapYamlSpec": {
          "type": "object",
          "required": [
            "targets",
            "variation"
          ],
          "properties": {
            "targets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "variation": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ResourceConstraintStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "acquireMode",
                "holdingScope",
                "name",
                "permits",
                "resourceUnit"
              ],
              "properties": {
                "acquireMode": {
                  "type": "string",
                  "enum": [
                    "ENSURE",
                    "ACCUMULATE"
                  ]
                },
                "holdingScope": {
                  "$ref": "#/definitions/cvng/HoldingScope"
                },
                "name": {
                  "type": "string"
                },
                "permits": {
                  "type": "integer",
                  "format": "int32"
                },
                "resourceUnit": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "RetryFailureActionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/FailureStrategyActionConfig"
            },
            {
              "type": "object",
              "required": [
                "spec",
                "type"
              ],
              "properties": {
                "spec": {
                  "readOnly": true,
                  "$ref": "#/definitions/cvng/RetryFailureSpecConfig"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Retry"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "RetryFailureSpecConfig": {
          "type": "object",
          "required": [
            "onRetryFailure",
            "retryCount",
            "retryIntervals"
          ],
          "properties": {
            "onRetryFailure": {
              "$ref": "#/definitions/cvng/OnRetryFailureConfig"
            },
            "retryCount": {
              "type": "integer",
              "format": "int32"
            },
            "retryIntervals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SecretNGVariable": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/NGVariable"
            },
            {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "default": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Secret"
                  ]
                },
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "Serve": {
          "type": "object",
          "properties": {
            "distribution": {
              "$ref": "#/definitions/cvng/Distribution"
            },
            "variation": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ServiceNowApprovalStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "approvalCriteria",
                "connectorRef",
                "ticketNumber",
                "ticketType"
              ],
              "properties": {
                "approvalCriteria": {
                  "$ref": "#/definitions/cvng/CriteriaSpecWrapper"
                },
                "connectorRef": {
                  "type": "string"
                },
                "delegateSelectors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                      "minLength": 1
                    }
                  ]
                },
                "rejectionCriteria": {
                  "$ref": "#/definitions/cvng/CriteriaSpecWrapper"
                },
                "ticketNumber": {
                  "type": "string"
                },
                "ticketType": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetDefaultVariationsYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/SetDefaultVariationsYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "SetDefaultVariations"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetDefaultVariationsYamlSpec": {
          "type": "object",
          "required": [
            "off",
            "on"
          ],
          "properties": {
            "off": {
              "type": "string"
            },
            "on": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetFeatureFlagStateYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/SetFeatureFlagStateYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "SetFeatureFlagState"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetFeatureFlagStateYamlSpec": {
          "type": "object",
          "required": [
            "state"
          ],
          "properties": {
            "state": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetOffVariationYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/SetOffVariationYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "SetOffVariation"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetOffVariationYamlSpec": {
          "type": "object",
          "required": [
            "variation"
          ],
          "properties": {
            "variation": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetOnVariationYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/SetOnVariationYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "SetOnVariation"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "SetOnVariationYamlSpec": {
          "type": "object",
          "required": [
            "variation"
          ],
          "properties": {
            "variation": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ShellScriptBaseSource": {
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ShellScriptInlineSource": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/ShellScriptBaseSource"
            },
            {
              "type": "object",
              "properties": {
                "script": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "ShellScriptSourceWrapper": {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Inline"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/ShellScriptInlineSource"
                  }
                }
              }
            }
          ]
        },
        "ShellScriptStepInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/StepSpecType"
            },
            {
              "type": "object",
              "required": [
                "onDelegate",
                "shell",
                "source"
              ],
              "properties": {
                "delegateSelectors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                      "minLength": 1
                    }
                  ]
                },
                "environmentVariables": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/cvng/NumberNGVariable"
                      },
                      {
                        "$ref": "#/definitions/cvng/SecretNGVariable"
                      },
                      {
                        "$ref": "#/definitions/cvng/StringNGVariable"
                      }
                    ]
                  }
                },
                "executionTarget": {
                  "$ref": "#/definitions/cvng/ExecutionTarget"
                },
                "metadata": {
                  "type": "string"
                },
                "onDelegate": {
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "outputVariables": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/cvng/NumberNGVariable"
                      },
                      {
                        "$ref": "#/definitions/cvng/SecretNGVariable"
                      },
                      {
                        "$ref": "#/definitions/cvng/StringNGVariable"
                      }
                    ]
                  }
                },
                "shell": {
                  "type": "string",
                  "enum": [
                    "Bash",
                    "PowerShell"
                  ]
                },
                "source": {
                  "$ref": "#/definitions/cvng/ShellScriptSourceWrapper"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "StageRollbackFailureActionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/FailureStrategyActionConfig"
            },
            {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "StageRollback"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "StepElementConfig": {
          "type": "object",
          "required": [
            "identifier",
            "name",
            "type"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cvng/FailureStrategyConfig"
              }
            },
            "identifier": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
            },
            "timeout": {
              "type": "string",
              "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Barrier",
                "FlagConfiguration",
                "HarnessApproval",
                "Http",
                "JiraApproval",
                "JiraCreate",
                "JiraUpdate",
                "ServiceNowApproval",
                "ShellScript",
                "Verify"
              ]
            },
            "when": {
              "$ref": "#/definitions/cvng/StepWhenCondition"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Barrier"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/BarrierStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "FlagConfiguration"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/FlagConfigurationStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "HarnessApproval"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/HarnessApprovalStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Http"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/HttpStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "JiraApproval"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/JiraApprovalStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "JiraCreate"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/JiraCreateStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "JiraUpdate"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/JiraUpdateStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "ServiceNowApproval"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/ServiceNowApprovalStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "ShellScript"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/ShellScriptStepInfo"
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Verify"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/CVNGStepInfo"
                  }
                }
              }
            }
          ]
        },
        "StepGroupFailureActionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/FailureStrategyActionConfig"
            },
            {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "StepGroupRollback"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "StepSpecType": {
          "type": "object",
          "discriminator": "type",
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "StepWhenCondition": {
          "type": "object",
          "required": [
            "stageStatus"
          ],
          "properties": {
            "condition": {
              "type": "string"
            },
            "stageStatus": {
              "type": "string",
              "enum": [
                "Success",
                "Failure",
                "All"
              ]
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "StringNGVariable": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/NGVariable"
            },
            {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "default": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "String"
                  ]
                },
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "TestVerificationJobSpec": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/VerificationJobSpec"
            },
            {
              "type": "object",
              "properties": {}
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "TransitionTo": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string"
            },
            "transitionName": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "UpdateRuleYaml": {
          "allOf": [
            {
              "$ref": "#/definitions/cvng/PatchInstruction"
            },
            {
              "type": "object",
              "required": [
                "identifier",
                "spec",
                "type"
              ],
              "properties": {
                "identifier": {
                  "type": "string"
                },
                "spec": {
                  "$ref": "#/definitions/cvng/UpdateRuleYamlSpec"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "UpdateRule"
                  ]
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "UpdateRuleYamlSpec": {
          "type": "object",
          "required": [
            "bucketBy",
            "ruleID"
          ],
          "properties": {
            "bucketBy": {
              "type": "string"
            },
            "ruleID": {
              "type": "string"
            },
            "serve": {
              "$ref": "#/definitions/cvng/Serve"
            },
            "variations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cvng/VariationYamlSpec"
              }
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "VariationYamlSpec": {
          "type": "object",
          "required": [
            "variation",
            "weight"
          ],
          "properties": {
            "variation": {
              "type": "string"
            },
            "weight": {
              "type": "integer",
              "format": "int32"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "VerificationJobSpec": {
          "type": "object",
          "required": [
            "deploymentTag",
            "duration",
            "sensitivity"
          ],
          "discriminator": "type",
          "properties": {
            "deploymentTag": {
              "type": "string",
              "description": "You can put expression <+serviceConfig.artifacts.primary.tag> to resolve primary tag"
            },
            "duration": {
              "type": "string",
              "description": "Format example: 5m, 30m, please put multiple of 5"
            },
            "sensitivity": {
              "type": "string",
              "description": "Possible values: [Low, Medium, High]"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "WeightedVariation": {
          "type": "object",
          "required": [
            "variation",
            "weight"
          ],
          "properties": {
            "variation": {
              "type": "string"
            },
            "weight": {
              "type": "integer",
              "format": "int32"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "CVVerifyStepNode": {
          "type": "object",
          "required": [
            "identifier",
            "name",
            "type"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "identifier": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
            },
            "timeout": {
              "type": "string",
              "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Verify"
              ]
            },
            "when": {
              "$ref": "#/definitions/cvng/StepWhenCondition"
            }
          },
          "$schema": "http://json-schema.org/draft-07/schema#",
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "Verify"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "$ref": "#/definitions/cvng/CVNGStepInfo"
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "nodeType": "Verify",
  "nodeName": "CVNGStageInfo",
  "namespace": "cvng",
  "moduleType": "CV",
  "skipStageSchema": true
}
server:
  applicationConnectors:
    - type: https
      port: 9007
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/jre/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
      maxRequestHeaderSize: 100KiB
    - type: http
      port: 9006
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: https
      port: 9096
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/jre/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
  rootPath: /api
  maxThreads: 1024

logging:
  level: INFO
  loggers:
    org.glassfish.jersey: INFO
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
    io.debezium.embedded.EmbeddedEngine$EmbeddedConfig: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false

allowedOrigins:
  - "https://localhost:8181"
  - "https://127.0.0.1:8181"
  - "http://localhost:8000"
  - "http://127.0.0.1:8000"
  - "https://localhost:8000"
  - "https://127.0.0.1:8000"

mongo:
  uri: ${MONGO_URI:-mongodb://127.0.0.1:27018,127.0.0.1:27019,127.0.0.1:27020/accesscontrol?replicaSet=rs0}
  connectTimeout: ${MONGO_CONNECT_TIMEOUT:-30000}
  serverSelectionTimeout: ${MONGO_SERVER_SELECTION_TIMEOUT:-90000}
  maxConnectionIdleTime: ${MAX_CONNECTION_IDLE_TIME:-600000}
  connectionsPerHost: ${-MONGO_CONNECTIONS_PER_HOST:-300}
  indexManagerMode: ${MONGO_INDEX_MANAGER_MODE:-AUTO}
  transactionsEnabled: ${MONGO_TRANSACTIONS_ENABLED:-true}
  aliasDBName: ${MONGO_ALIAS_DB_NAME:-accesscontrol}

eventsConfig:
  redis:
    sentinel: ${EVENTS_CONFIG_USE_SENTINEL:-false}
    masterName: ${EVENTS_CONFIG_SENTINEL_MASTER_NAME:-test}
    redisUrl: ${EVENTS_CONFIG_REDIS_URL:-redis://localhost:6379}
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ${EVENTS_CONFIG_ENV_NAMESPACE:-""}
    readMode: MASTER
    nettyThreads: ${EVENTS_CONFIG_NETTY_THREADS:-16}
    useScriptCache: true
    userName: ${EVENTS_CONFIG_REDIS_USERNAME:-""}
    password: ${EVENTS_CONFIG_REDIS_PASSWORD:-""}
    sslConfig:
      enabled: ${EVENTS_CONFIG_REDIS_SSL_ENABLED:-false}
      CATrustStorePath: ${EVENTS_CONFIG_REDIS_SSL_CA_TRUST_STORE_PATH:-""}
      CATrustStorePassword: ${EVENTS_CONFIG_REDIS_SSL_CA_TRUST_STORE_PASSWORD:-""}
  enabled: true

redisLockConfig:
  sentinel: ${LOCK_CONFIG_USE_SENTINEL:-false}
  masterName: ${LOCK_CONFIG_SENTINEL_MASTER_NAME:-test}
  redisUrl: ${LOCK_CONFIG_REDIS_URL:-redis://localhost:6379}
  sentinelUrls:
    - "redis://redis1:26379"
    - "redis://redis2:26379"
    - "redis://redis3:26379"
  envNamespace: ${LOCK_CONFIG_ENV_NAMESPACE:-""}
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true
  userName: ${LOCK_CONFIG_REDIS_USERNAME:-""}
  password: ${LOCK_CONFIG_REDIS_PASSWORD:-""}

distributedLockImplementation: ${DISTRIBUTED_LOCK_IMPLEMENTATION:-REDIS}

iteratorsConfig:
  resourceGroupIteratorConfig:
    enabled: ${RESOURCE_GROUP_ITERATOR_ENABLED:-true}
    targetIntervalInSeconds: ${RESOURCE_GROUP_ITERATOR_INTERVAL:-6000}
  userGroupIteratorConfig:
    enabled: ${USER_GROUP_ITERATOR_ENABLED:-true}
    targetIntervalInSeconds: ${USER_GROUP_ITERATOR_INTERVAL:-6000}
  userIteratorConfig:
    enabled: ${USER_ITERATOR_ENABLED:-true}
    targetIntervalInSeconds: ${USER_ITERATOR_INTERVAL:-6000}
  serviceAccountIteratorConfig:
    enabled: ${SERVICEACCOUNT_ITERATOR_ENABLED:-true}
    targetIntervalInSeconds: ${SERVICEACCOUNT_ITERATOR_INTERVAL:-6000}
  supportPreferenceIteratorConfig:
    enabled: ${SUPPORTPREFERENCE_ITERATOR_ENABLED:-true}
    targetIntervalInSeconds: ${SUPPORTPREFERENCE_ITERATOR_INTERVAL:-6000}
  scopeIteratorConfig:
    enabled: ${SCOPE_ITERATOR_ENABLED:-true}
    targetIntervalInSeconds: ${SCOPE_ITERATOR_INTERVAL:-6000}

accountClient:
  accountServiceConfig:
    baseUrl: ${ACCOUNT_CLIENT_BASE_URL:-https://localhost:9090/api/}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  accountServiceSecret: ${ACCOUNT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

accessControlClient:
  enableAccessControl: ${ENABLE_ACCESS_CONTROL:-true}
  accessControlServiceConfig:
    baseUrl: ${ACCESS_CONTROL_SERVICE_BASE_URL:-http://localhost:9006/api/}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  accessControlServiceSecret: ${ACCESS_CONTROL_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

resourceGroupClient:
  resourceGroupServiceConfig:
    baseUrl: ${RESOURCE_GROUP_CLIENT_BASE_URL:-http://localhost:9005/api/}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  resourceGroupServiceSecret: ${RESOURCE_GROUP_CLIENT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

userClient:
  userServiceConfig:
    baseUrl: ${USER_CLIENT_BASE_URL:-https://localhost:7090}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  userServiceSecret: ${USER_CLIENT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

userGroupClient:
  userGroupServiceConfig:
    baseUrl: ${USER_GROUP_CLIENT_BASE_URL:-https://localhost:7090}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  userGroupServiceSecret: ${USER_GROUP_CLIENT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

projectClient:
  projectServiceConfig:
    baseUrl: ${PROJECT_CLIENT_BASE_URL:-https://localhost:7090}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  projectServiceSecret: ${PROJECT_CLIENT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

organizationClient:
  organizationServiceConfig:
    baseUrl: ${ORGANIZATION_CLIENT_BASE_URL:-https://localhost:7090}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  organizationServiceSecret: ${ORGANIZATION_CLIENT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

notificationConfig:
  slackWebhookUrl: ${NOTIFICATION_SLACK_WEBHOOK_URL:-https://hooks.slack.com/services/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}
  environment: ${NOTIFICATION_ENVIRONMENT:-localhost}

aggregatorModuleConfig:
  debezium:
    name: ${DEBEZIUM_NAME:-aggregator}
    offset.storage.file.filename: ${OFFSET_STORAGE_FILE_FILENAME:-mongodb://127.0.0.1:27018,127.0.0.1:27019,127.0.0.1:27020/accesscontrol?replicaSet=rs0}
    key.converter.schemas.enable: ${KEY_CONVERTER_SCHEMAS_ENABLE:-false}
    value.converter.schemas.enable: ${VALUE_CONVERTER_SCHEMAS_ENABLE:-false}
    offset.flush.interval.ms: ${OFFSET_FLUSH_INTERVAL_MS:-5000}
    mongodb.hosts: ${MONGODB_HOSTS:-rs0/localhost:27018,rs0/localhost:27019,rs0/localhost:27020}
    mongodb.name: ${MONGODB_NAME:-access_control_db}
    mongodb.user: ${MONGODB_USER:-""}
    mongodb.password: ${MONGODB_PASSWORD:-""}
    mongodb.ssl.enabled: ${MONGODB_SSL_ENABLED:-false}
    connector.class: ${CONNECTOR_CLASS:-io.debezium.connector.mongodb.MongoDbConnector}
    database.include.list: ${DATABASE_INCLUDE_LIST:-accesscontrol}
    collection.include.list: ${COLLECTION_INCLUDE_LIST:-accesscontrol.roles,accesscontrol.roleassignments,accesscontrol.resourcegroups,accesscontrol.usergroups}
  enabled: ${AGGREGATOR_ENABLED:-true}
  exportMetricsToStackDriver: ${EXPORT_METRICS_TO_STACK_DRIVER:-false}

accessControlPreferenceConfig:
  enabled: ${ACCESS_CONTROL_PREFERENCE_ENABLED:-true}

enableAuth: ${ENABLE_AUTH:-true}
defaultServiceSecret: ${DEFAULT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}
jwtAuthSecret: ${JWT_AUTH_SECRET:-dOkdsVqdRPPRJG31XU0qY4MPqmBBMk0PTAGIKM6O7TGqhjyxScIdJe80mwh5Yb5zF3KxYBHw6B3Lfzlq}
identityServiceSecret: ${IDENTITY_SERVICE_SECRET:-HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU=}

enableAudit: ${ENABLE_AUDIT:-false}

auditClientConfig:
  baseUrl: ${AUDIT_CLIENT_BASE_URL:-http://localhost:9005/api/}
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15
  enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}

outboxPollConfig:
  initialDelayInSeconds: ${OUTBOX_POLL_INITIAL_DELAY:-5}
  pollingIntervalInSeconds: ${OUTBOX_POLL_INTERVAL:-5}
  maximumRetryAttemptsForAnEvent: ${OUTBOX_MAX_RETRY_ATTEMPTS:-7}
  lockId: AccessControlService

featureFlagClientConfiguration:
  featureFlagServiceConfig:
    baseUrl: ${FEATURE_FLAG_CLIENT_BASE_URL:-https://localhost:9090/api/}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  featureFlagServiceSecret: ${FEATURE_FLAG_CLIENT_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

serviceAccountClient:
  serviceAccountServiceConfig:
    baseUrl: ${SERVICEACCOUNT_CLIENT_BASE_URL:-https://localhost:7090}
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
    enableHttpLogging: ${ENABLE_HTTP_LOGGING:-false}
  serviceAccountServiceSecret: ${SERVICEACCOUNT_CLIENT_SERVICE_SECRET:-IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM}

enforcementClientConfiguration:
  enforcementCheckEnabled: ${ENFORCEMENT_CHECK_ENABLED:-false}

hostname: ${HOSTNAME:-localhost}
basePathPrefix: ${BASE_PATH_PREFIX:-""}

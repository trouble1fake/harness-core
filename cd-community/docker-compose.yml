version: "3.7"

services:
  ng-ui:
    image: harness/nextgenui-signed:0.280.16
    deploy:
      resources:
        limits:
          memory: 32m
    environment:
      - HARNESS_ENABLE_NG_AUTH_UI_PLACEHOLDER=true
    expose:
      - '8080'
    healthcheck:
      test: "curl -s http://localhost:8080/health"
    networks:
      harness-network:

  ng-auth-ui:
    image: harness/ng-auth-ui-signed:0.30.1
    deploy:
      resources:
        limits:
          memory: 24m
    environment:
      - DEPLOYMENT_TYPE=COMMUNITY
    expose:
      - '8080'
    healthcheck:
      test: "curl -s http://localhost:8080/health"
    networks:
      harness-network:

  manager:
    image: bazel/360-cg-manager/container:manager
    deploy:
      resources:
        limits:
          memory: 1454m
    env_file:
      - environment/manager.env
    environment:
      - API_URL=http://${HARNESS_HOST:-host.docker.internal}
      - DELEGATE_GRPC_TARGET=${HARNESS_HOST:-host.docker.internal}:9879
      - LOG_STREAMING_SERVICE_BASEURL=http://${HARNESS_HOST:-host.docker.internal}/log-service/
    expose:
      - '9090'
      - '9879'
    healthcheck:
      test: "wget -q -O - http://localhost:9090/api/health"
      start_period: 5m
    networks:
      harness-network:

  ng-manager:
    image: bazel/120-ng-manager/container:ng_manager
    deploy:
      resources:
        limits:
          memory: 1454m
    restart: on-failure
    env_file: environment/ng-manager.env
    expose:
      - '7090'
    healthcheck:
      test: "wget -q -O - http://localhost:7090/health"
      start_period: 5m
    networks:
      harness-network:

  pipeline-service:
    image: bazel/800-pipeline-service/container:pipeline_service
    deploy:
      resources:
        limits:
          memory: 1320m
    env_file: environment/pipeline-service.env
    expose:
      - '12001'
      - '12011'
      - '14002'
    healthcheck:
      test: "wget -q -O - http://localhost:12001/api/health"
      start_period: 5m
    networks:
      harness-network:

  platform-service:
    image: bazel/820-platform-service/container:platform_service
    deploy:
      resources:
        limits:
          memory: 372m
    env_file: environment/platform-service.env
    expose:
      - '9005'
    healthcheck:
      test: "wget -q -O - http://localhost:9005/api/health"
      start_period: 5m
    networks:
      harness-network:

  log-service:
    image: harness/log-service-signed:release-18
    deploy:
      resources:
        limits:
          memory: 160m
    environment:
      - LOG_SERVICE_DISABLE_AUTH=true
    expose:
      - '8079'
    healthcheck:
      test: "wget -q -O - http://localhost:8079/healthz"
    networks:
      harness-network:

  scm:
    image: harness/ci-scm-signed:release-27
    deploy:
      resources:
        limits:
          memory: 96m
    expose:
      - '8091'
    healthcheck:
      test: "/grpc_health_probe -addr=:8091"
    networks:
      harness-network:

  delegate-proxy:
    image: bazel/dockerization/delegate-proxy:delegate_proxy
    deploy:
      resources:
        limits:
          memory: 48m
    expose:
      - '8080'
    healthcheck:
      test: "curl -s http://localhost:8080/health"
    networks:
      harness-network:

  proxy:
    image: harness/nginx:1.21.4
    deploy:
      resources:
        limits:
          memory: 32m
    expose:
      - '80'
    depends_on:
      - ng-ui
      - manager
      - ng-manager
      - pipeline-service
      - platform-service
      - delegate-proxy
    healthcheck:
      test: "curl -s http://localhost:80/health"
    networks:
      harness-network:
    ports:
      - '80:80'
      - '9879:9879'
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./scripts/wait-for-it.sh:/bin/wait-for-it.sh

  redis:
    image: harness/redis:6.2.5-alpine
    deploy:
      resources:
        limits:
          memory: 384m
    expose:
      - '6379'
    healthcheck:
      test: "redis-cli ping"
    networks:
      harness-network:

  mongo:
    image: harness/mongo:4.2.8
    deploy:
      resources:
        limits:
          memory: 768m
    command: --wiredTigerCacheSizeGB 0.375 -f /etc/mongod.conf
    healthcheck:
      test: "mongo --eval 'db.runCommand(\"ping\").ok' --quiet"
    networks:
      harness-network:
    volumes:
      - mongo_data:/data/db
      - ./config/mongo/mongod.conf:/etc/mongod.conf

networks:
  harness-network:
    ipam:
      config:
        - subnet: 192.168.0.0/24

volumes:
  mongo_data:

{
  "type": "object",
  "required": [
    "identifier",
    "name",
    "type"
  ],
  "properties": {
    "description": {
      "type": "string"
    },
    "identifier": {
      "type": "string",
      "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
    },
    "name": {
      "type": "string",
      "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
    },
    "tags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "type": {
      "type": "string",
      "enum": [
        "CI"
      ]
    },
    "variables": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/NumberNGVariable"
          },
          {
            "$ref": "#/definitions/SecretNGVariable"
          },
          {
            "$ref": "#/definitions/StringNGVariable"
          }
        ]
      }
    },
    "when": {
      "$ref": "#/definitions/StageWhenCondition"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "allOf": [
    {
      "if": {
        "properties": {
          "type": {
            "const": "CI"
          }
        }
      },
      "then": {
        "properties": {
          "spec": {
            "$ref": "#/definitions/IntegrationStageConfig"
          }
        }
      }
    }
  ],
  "definitions": {
    "AbortFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Abort"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddRuleYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/AddRuleYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "AddRule"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddRuleYamlSpec": {
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Clause"
          }
        },
        "distribution": {
          "$ref": "#/definitions/DistributionYamlSpec"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "serve": {
          "$ref": "#/definitions/Serve"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddSegmentToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/AddSegmentToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "AddSegmentToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddSegmentToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "segments",
        "variation"
      ],
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddTargetsToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/AddTargetsToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "AddTargetsToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddTargetsToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "targets",
        "variation"
      ],
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ApproverInputInfo": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Approvers": {
      "type": "object",
      "required": [
        "disallowPipelineExecutor",
        "minimumCount",
        "userGroups"
      ],
      "properties": {
        "disallowPipelineExecutor": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "minimumCount": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string"
            }
          ]
        },
        "userGroups": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BarrierStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "barrierRef"
          ],
          "properties": {
            "barrierRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BranchBuildSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildSpec"
        },
        {
          "type": "object",
          "required": [
            "branch"
          ],
          "properties": {
            "branch": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BranchWebhookEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/WebhookEvent"
        },
        {
          "type": "object",
          "properties": {
            "baseAttributes": {
              "$ref": "#/definitions/WebhookBaseAttributes"
            },
            "branchName": {
              "type": "string"
            },
            "commitDetailsList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommitDetails"
              }
            },
            "link": {
              "type": "string"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Build": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "spec": {
          "$ref": "#/definitions/BuildSpec"
        },
        "type": {
          "type": "string",
          "enum": [
            "branch",
            "tag",
            "PR"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BuildJobEnvInfo": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "K8",
            "VM"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BuildNumberDetails": {
      "type": "object",
      "required": [
        "uuid"
      ],
      "properties": {
        "buildNumber": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BuildSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CIExecutionArgs": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "buildNumberDetails": {
          "$ref": "#/definitions/BuildNumberDetails"
        },
        "executionSource": {
          "$ref": "#/definitions/ExecutionSource"
        },
        "inputSet": {
          "$ref": "#/definitions/InputSet"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CIServiceInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DependencySpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "image"
          ],
          "properties": {
            "args": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "entrypoint": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "envVariables": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Clause": {
      "type": "object",
      "required": [
        "attribute",
        "id",
        "negate",
        "op",
        "values"
      ],
      "properties": {
        "attribute": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "op": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ClauseYamlSpec": {
      "type": "object",
      "required": [
        "op",
        "values"
      ],
      "properties": {
        "attribute": {
          "type": "string"
        },
        "op": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CleanupStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "infrastructure",
            "podName"
          ],
          "properties": {
            "infrastructure": {
              "$ref": "#/definitions/Infrastructure"
            },
            "podName": {
              "type": "string"
            },
            "runAsUser": {
              "$ref": "#/definitions/ParameterFieldInteger"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CodeBase": {
      "type": "object",
      "required": [
        "build",
        "connectorRef"
      ],
      "properties": {
        "build": {
          "$ref": "#/definitions/Build"
        },
        "connectorRef": {
          "type": "string"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "prCloneStrategy": {
          "type": "string",
          "enum": [
            "MergeCommit",
            "SourceBranch"
          ]
        },
        "repoName": {
          "type": "string"
        },
        "resources": {
          "$ref": "#/definitions/ContainerResource"
        },
        "sslVerify": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CommitDetails": {
      "type": "object",
      "properties": {
        "commitId": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ownerEmail": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Condition": {
      "type": "object",
      "required": [
        "key",
        "operator",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "equals",
            "not equals",
            "in",
            "not in"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ConnectorConversionInfo": {
      "type": "object",
      "properties": {
        "connectorRef": {
          "type": "string"
        },
        "envToSecretsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerDefinitionInfo": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerImageDetails": {
          "$ref": "#/definitions/ContainerImageDetails"
        },
        "containerResourceParams": {
          "$ref": "#/definitions/ContainerResourceParams"
        },
        "containerType": {
          "type": "string",
          "enum": [
            "STEP_EXECUTOR",
            "ADD_ON",
            "RUN",
            "PLUGIN",
            "SERVICE",
            "LITE_ENGINE",
            "TEST_INTELLIGENCE"
          ]
        },
        "envVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "envVarsWithSecretRef": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "harnessManagedImage": {
          "type": "boolean"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "mainLiteEngine": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "privileged": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int32"
        },
        "secretVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretNGVariable"
          }
        },
        "stepIdentifier": {
          "type": "string"
        },
        "stepName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerImageDetails": {
      "type": "object",
      "properties": {
        "connectorIdentifier": {
          "type": "string"
        },
        "imageDetails": {
          "$ref": "#/definitions/ImageDetails"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerResource": {
      "type": "object",
      "required": [
        "limits"
      ],
      "properties": {
        "limits": {
          "$ref": "#/definitions/Limits"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerResourceParams": {
      "type": "object",
      "properties": {
        "resourceLimitMemoryMiB": {
          "type": "integer",
          "format": "int32"
        },
        "resourceLimitMilliCpu": {
          "type": "integer",
          "format": "int32"
        },
        "resourceRequestMemoryMiB": {
          "type": "integer",
          "format": "int32"
        },
        "resourceRequestMilliCpu": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CriteriaSpec": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CriteriaSpecWrapper": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Jexl",
            "KeyValues"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Jexl"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JexlCriteriaSpec"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "KeyValues"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KeyValuesCriteriaSpec"
              }
            }
          }
        }
      ]
    },
    "CustomExecutionSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionSource"
        },
        {
          "type": "object",
          "properties": {
            "branch": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DependencyElement": {
      "type": "object",
      "required": [
        "identifier",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Service"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Service"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CIServiceInfo"
              }
            }
          }
        }
      ]
    },
    "DependencySpecType": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Distribution": {
      "type": "object",
      "required": [
        "bucketBy",
        "variations"
      ],
      "properties": {
        "bucketBy": {
          "type": "string"
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeightedVariation"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DistributionYamlSpec": {
      "type": "object",
      "required": [
        "bucketBy"
      ],
      "properties": {
        "bucketBy": {
          "type": "string"
        },
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClauseYamlSpec"
          }
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariationYamlSpec"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "repo",
            "tags"
          ],
          "properties": {
            "buildArgs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "dockerfile": {
              "type": "string"
            },
            "labels": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "optimize": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "remoteCacheRepo": {
              "type": "string"
            },
            "repo": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ECRStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "account",
            "connectorRef",
            "imageName",
            "region",
            "tags"
          ],
          "properties": {
            "account": {
              "type": "string"
            },
            "buildArgs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "dockerfile": {
              "type": "string"
            },
            "imageName": {
              "type": "string"
            },
            "labels": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "optimize": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "remoteCacheImage": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionElementConfig": {
      "type": "object",
      "required": [
        "steps"
      ],
      "properties": {
        "rollbackSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          },
          "maxItems": 2147483647,
          "minItems": 1
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionSource": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WEBHOOK",
            "MANUAL",
            "CUSTOM"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionTarget": {
      "type": "object",
      "properties": {
        "connectorRef": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "workingDirectory": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionWrapperConfig": {
      "type": "object",
      "properties": {
        "parallel": {
          "$ref": "#/definitions/ParallelStepElementConfig"
        },
        "step": {
          "$ref": "#/definitions/StepElementConfig"
        },
        "stepGroup": {
          "$ref": "#/definitions/StepGroupElementConfig"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FailureStrategyActionConfig": {
      "type": "object",
      "required": [
        "type"
      ],
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Ignore",
            "Retry",
            "MarkAsSuccess",
            "Abort",
            "StageRollback",
            "StepGroupRollback",
            "ManualIntervention"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FailureStrategyConfig": {
      "type": "object",
      "required": [
        "onFailure"
      ],
      "properties": {
        "onFailure": {
          "$ref": "#/definitions/OnFailureConfig"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FlagConfigurationStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "environment",
            "feature",
            "instructions"
          ],
          "properties": {
            "environment": {
              "type": "string"
            },
            "feature": {
              "type": "string"
            },
            "instructions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatchInstruction"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GCRStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "host",
            "imageName",
            "projectID",
            "tags"
          ],
          "properties": {
            "buildArgs": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "context": {
              "type": "string"
            },
            "dockerfile": {
              "type": "string"
            },
            "host": {
              "type": "string"
            },
            "imageName": {
              "type": "string"
            },
            "labels": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "optimize": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "projectID": {
              "type": "string"
            },
            "remoteCacheImage": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "tags": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HarnessApprovalStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "approvalMessage",
            "approvers",
            "includePipelineExecutionHistory"
          ],
          "properties": {
            "approvalMessage": {
              "type": "string"
            },
            "approverInputs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApproverInputInfo"
              }
            },
            "approvers": {
              "$ref": "#/definitions/Approvers"
            },
            "includePipelineExecutionHistory": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HoldingScope": {
      "type": "object",
      "required": [
        "nodeSetupId",
        "scope"
      ],
      "properties": {
        "nodeSetupId": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HttpHeaderConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HttpStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "method",
            "url"
          ],
          "properties": {
            "assertion": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            },
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpHeaderConfig"
              }
            },
            "method": {
              "type": "string"
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "requestBody": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IgnoreFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Ignore"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ImageDetails": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "registryUrl": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "usernameRef": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Infrastructure": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "KubernetesDirect",
            "UseFromStage",
            "VM"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "InitializeStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "accountId",
            "buildJobEnvInfo",
            "executionElementConfig",
            "infrastructure",
            "skipGitClone"
          ],
          "properties": {
            "accountId": {
              "type": "string"
            },
            "buildJobEnvInfo": {
              "$ref": "#/definitions/BuildJobEnvInfo"
            },
            "ciCodebase": {
              "$ref": "#/definitions/CodeBase"
            },
            "executionElementConfig": {
              "$ref": "#/definitions/ExecutionElementConfig"
            },
            "infrastructure": {
              "$ref": "#/definitions/Infrastructure"
            },
            "skipGitClone": {
              "type": "boolean"
            },
            "timeout": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "InputSet": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Manual",
            "Webhook"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "InputSetValidator": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "string"
        },
        "validatorType": {
          "type": "string",
          "enum": [
            "ALLOWED_VALUES",
            "REGEX"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IntegrationStageConfig": {
      "type": "object",
      "required": [
        "infrastructure"
      ],
      "properties": {
        "cloneCodebase": {
          "type": "boolean"
        },
        "execution": {
          "$ref": "#/definitions/ExecutionElementConfig"
        },
        "infrastructure": {
          "oneOf": [
            {
              "$ref": "#/definitions/K8sDirectInfraYaml"
            },
            {
              "$ref": "#/definitions/UseFromStageInfraYaml"
            },
            {
              "$ref": "#/definitions/VmInfraYaml"
            }
          ]
        },
        "serviceDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyElement"
          }
        },
        "sharedPaths": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "IntegrationStageNode": {
      "type": "object",
      "required": [
        "identifier",
        "name",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "CI"
          ]
        },
        "variables": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/NumberNGVariable"
              },
              {
                "$ref": "#/definitions/SecretNGVariable"
              },
              {
                "$ref": "#/definitions/StringNGVariable"
              }
            ]
          }
        },
        "when": {
          "$ref": "#/definitions/StageWhenCondition"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "CI"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/IntegrationStageConfig"
              }
            }
          }
        }
      ]
    },
    "JUnitTestReport": {
      "allOf": [
        {
          "$ref": "#/definitions/UnitTestReportSpec"
        },
        {
          "type": "object",
          "properties": {
            "paths": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JexlCriteriaSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/CriteriaSpec"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraApprovalStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "approvalCriteria",
            "connectorRef",
            "issueKey"
          ],
          "properties": {
            "approvalCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            },
            "issueKey": {
              "type": "string"
            },
            "rejectionCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraCreateStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "issueType",
            "projectKey"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JiraField"
              }
            },
            "issueType": {
              "type": "string"
            },
            "projectKey": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraField": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraUpdateStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "issueKey"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JiraField"
              }
            },
            "issueKey": {
              "type": "string"
            },
            "transitionTo": {
              "$ref": "#/definitions/TransitionTo"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "null": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8BuildJobEnvInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildJobEnvInfo"
        },
        {
          "type": "object",
          "properties": {
            "podsSetupInfo": {
              "$ref": "#/definitions/PodsSetupInfo"
            },
            "stepConnectorRefs": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ConnectorConversionInfo"
              }
            },
            "workDir": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8sDirectInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/K8sDirectInfraYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect",
                "UseFromStage",
                "VM"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "K8sDirectInfraYamlSpec": {
      "type": "object",
      "required": [
        "connectorRef",
        "namespace"
      ],
      "properties": {
        "annotations": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "connectorRef": {
          "type": "string"
        },
        "initTimeout": {
          "type": "string"
        },
        "labels": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "namespace": {
          "type": "string"
        },
        "runAsUser": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string"
            }
          ]
        },
        "serviceAccountName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KeyValuesCriteriaSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/CriteriaSpec"
        },
        {
          "type": "object",
          "required": [
            "conditions"
          ],
          "properties": {
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Condition"
              }
            },
            "matchAnyCondition": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Limits": {
      "type": "object",
      "properties": {
        "cpu": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "memory": {
          "type": "string",
          "pattern": "^(([0-9]*[.])?[0-9]+)([GM]i?)$"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ManualExecutionSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionSource"
        },
        {
          "type": "object",
          "properties": {
            "branch": {
              "type": "string"
            },
            "commitSha": {
              "type": "string"
            },
            "prNumber": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ManualFailureSpecConfig": {
      "type": "object",
      "required": [
        "onTimeout",
        "timeout"
      ],
      "properties": {
        "onTimeout": {
          "$ref": "#/definitions/OnTimeoutConfig"
        },
        "timeout": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ManualInterventionFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "readOnly": true,
              "$ref": "#/definitions/ManualFailureSpecConfig"
            },
            "type": {
              "type": "string",
              "enum": [
                "ManualIntervention"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "MarkAsSuccessFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MarkAsSuccess"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NGVariable": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "description": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "String",
            "Number",
            "Secret"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NumberNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "number",
              "format": "double"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Number"
              ]
            },
            "value": {
              "oneOf": [
                {
                  "type": "number",
                  "format": "double"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OnFailureConfig": {
      "type": "object",
      "required": [
        "action",
        "errors"
      ],
      "properties": {
        "action": {
          "oneOf": [
            {
              "$ref": "#/definitions/AbortFailureActionConfig"
            },
            {
              "$ref": "#/definitions/IgnoreFailureActionConfig"
            },
            {
              "$ref": "#/definitions/ManualInterventionFailureActionConfig"
            },
            {
              "$ref": "#/definitions/MarkAsSuccessFailureActionConfig"
            },
            {
              "$ref": "#/definitions/RetryFailureActionConfig"
            },
            {
              "$ref": "#/definitions/StageRollbackFailureActionConfig"
            },
            {
              "$ref": "#/definitions/StepGroupFailureActionConfig"
            }
          ]
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Unknown",
              "AllErrors",
              "Authentication",
              "Connectivity",
              "Timeout",
              "Authorization",
              "Verification",
              "DelegateProvisioning"
            ]
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OnRetryFailureConfig": {
      "type": "object",
      "properties": {
        "action": {
          "oneOf": [
            {
              "$ref": "#/definitions/AbortFailureActionConfig"
            },
            {
              "$ref": "#/definitions/IgnoreFailureActionConfig"
            },
            {
              "$ref": "#/definitions/ManualInterventionFailureActionConfig"
            },
            {
              "$ref": "#/definitions/MarkAsSuccessFailureActionConfig"
            },
            {
              "$ref": "#/definitions/RetryFailureActionConfig"
            },
            {
              "$ref": "#/definitions/StageRollbackFailureActionConfig"
            },
            {
              "$ref": "#/definitions/StepGroupFailureActionConfig"
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OnTimeoutConfig": {
      "type": "object",
      "properties": {
        "action": {
          "oneOf": [
            {
              "$ref": "#/definitions/AbortFailureActionConfig"
            },
            {
              "$ref": "#/definitions/IgnoreFailureActionConfig"
            },
            {
              "$ref": "#/definitions/ManualInterventionFailureActionConfig"
            },
            {
              "$ref": "#/definitions/MarkAsSuccessFailureActionConfig"
            },
            {
              "$ref": "#/definitions/RetryFailureActionConfig"
            },
            {
              "$ref": "#/definitions/StageRollbackFailureActionConfig"
            },
            {
              "$ref": "#/definitions/StepGroupFailureActionConfig"
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OutputNGVariable": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PRBuildSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildSpec"
        },
        {
          "type": "object",
          "required": [
            "number"
          ],
          "properties": {
            "number": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PRWebhookEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/WebhookEvent"
        },
        {
          "type": "object",
          "properties": {
            "baseAttributes": {
              "$ref": "#/definitions/WebhookBaseAttributes"
            },
            "closed": {
              "type": "boolean"
            },
            "commitDetailsList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommitDetails"
              }
            },
            "merged": {
              "type": "boolean"
            },
            "pullRequestBody": {
              "type": "string"
            },
            "pullRequestId": {
              "type": "integer",
              "format": "int64"
            },
            "pullRequestLink": {
              "type": "string"
            },
            "repository": {
              "$ref": "#/definitions/Repository"
            },
            "sourceBranch": {
              "type": "string"
            },
            "targetBranch": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PVCParams": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string"
        },
        "present": {
          "type": "boolean"
        },
        "sizeMib": {
          "type": "integer",
          "format": "int32"
        },
        "storageClass": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParallelStepElementConfig": {
      "type": "object",
      "required": [
        "sections"
      ],
      "properties": {
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterField": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "object"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldInteger": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldMapStringJsonNode": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PatchInstruction": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SetFeatureFlagState",
            "SetOnVariation",
            "SetOffVariation",
            "SetDefaultVariations",
            "AddRule",
            "UpdateRule",
            "AddTargetsToVariationTargetMap",
            "RemoveTargetsToVariationTargetMap",
            "AddSegmentToVariationTargetMap",
            "RemoveSegmentsToVariationTargetMap"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PluginStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "image"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "reports": {
              "$ref": "#/definitions/UnitTestReport"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PodSetupInfo": {
      "type": "object",
      "required": [
        "stageCpuRequest",
        "stageMemoryRequest",
        "volumeToMountPath"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "podSetupParams": {
          "$ref": "#/definitions/PodSetupParams"
        },
        "pvcParamsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PVCParams"
          }
        },
        "serviceGrpcPortList": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "serviceIdList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stageCpuRequest": {
          "type": "integer",
          "format": "int32"
        },
        "stageMemoryRequest": {
          "type": "integer",
          "format": "int32"
        },
        "volumeToMountPath": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workDirPath": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PodSetupParams": {
      "type": "object",
      "properties": {
        "containerDefinitionInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerDefinitionInfo"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PodsSetupInfo": {
      "type": "object",
      "properties": {
        "podSetupInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodSetupInfo"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveSegmentToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/RemoveSegmentToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "RemoveSegmentToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveSegmentToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "segments",
        "variation"
      ],
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveTargetsToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/RemoveTargetsToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "RemoveTargetsToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveTargetsToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "targets",
        "variation"
      ],
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Repository": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "httpURL": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "private": {
          "type": "boolean"
        },
        "slug": {
          "type": "string"
        },
        "sshURL": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ResourceConstraintStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "acquireMode",
            "holdingScope",
            "name",
            "permits",
            "resourceUnit"
          ],
          "properties": {
            "acquireMode": {
              "type": "string",
              "enum": [
                "ENSURE",
                "ACCUMULATE"
              ]
            },
            "holdingScope": {
              "$ref": "#/definitions/HoldingScope"
            },
            "name": {
              "type": "string"
            },
            "permits": {
              "type": "integer",
              "format": "int32"
            },
            "resourceUnit": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RestoreCacheGCSStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key"
          ],
          "properties": {
            "archiveFormat": {
              "type": "string",
              "enum": [
                "Tar",
                "Gzip"
              ]
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "failIfKeyNotFound": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "key": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RestoreCacheS3StepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key"
          ],
          "properties": {
            "archiveFormat": {
              "type": "string",
              "enum": [
                "Tar",
                "Gzip"
              ]
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "failIfKeyNotFound": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "key": {
              "type": "string"
            },
            "pathStyle": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RetryFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "readOnly": true,
              "$ref": "#/definitions/RetryFailureSpecConfig"
            },
            "type": {
              "type": "string",
              "enum": [
                "Retry"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RetryFailureSpecConfig": {
      "type": "object",
      "required": [
        "onRetryFailure",
        "retryCount",
        "retryIntervals"
      ],
      "properties": {
        "onRetryFailure": {
          "$ref": "#/definitions/OnRetryFailureConfig"
        },
        "retryCount": {
          "type": "integer",
          "format": "int32"
        },
        "retryIntervals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 2147483647,
          "minItems": 1
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RunStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "command"
          ],
          "properties": {
            "command": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "envVariables": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ]
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutputNGVariable"
              }
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "reports": {
              "$ref": "#/definitions/UnitTestReport"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "shell": {
              "type": "string",
              "enum": [
                "Sh",
                "Bash",
                "Powershell",
                "Pwsh"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RunTestsStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "args",
            "buildTool",
            "language"
          ],
          "properties": {
            "args": {
              "type": "string"
            },
            "buildTool": {
              "type": "string",
              "enum": [
                "Maven",
                "Bazel",
                "Gradle",
                "Dotnet",
                "Nunitconsole"
              ]
            },
            "connectorRef": {
              "type": "string"
            },
            "envVariables": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ]
            },
            "language": {
              "type": "string",
              "enum": [
                "Java",
                "Csharp"
              ]
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutputNGVariable"
              }
            },
            "packages": {
              "type": "string"
            },
            "postCommand": {
              "type": "string"
            },
            "preCommand": {
              "type": "string"
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "reports": {
              "$ref": "#/definitions/UnitTestReport"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "runOnlySelectedTests": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "shell": {
              "type": "string",
              "enum": [
                "Sh",
                "Bash",
                "Powershell",
                "Pwsh"
              ]
            },
            "testAnnotations": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SaveCacheGCSStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key",
            "sourcePaths"
          ],
          "properties": {
            "archiveFormat": {
              "type": "string",
              "enum": [
                "Tar",
                "Gzip"
              ]
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "override": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePaths": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SaveCacheS3StepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "key",
            "sourcePaths"
          ],
          "properties": {
            "archiveFormat": {
              "type": "string",
              "enum": [
                "Tar",
                "Gzip"
              ]
            },
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "override": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "pathStyle": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePaths": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SecretNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Secret"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Serve": {
      "type": "object",
      "properties": {
        "distribution": {
          "$ref": "#/definitions/Distribution"
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ServiceNowApprovalStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "approvalCriteria",
            "connectorRef",
            "ticketNumber",
            "ticketType"
          ],
          "properties": {
            "approvalCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            },
            "rejectionCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "ticketNumber": {
              "type": "string"
            },
            "ticketType": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetDefaultVariationsYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetDefaultVariationsYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetDefaultVariations"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetDefaultVariationsYamlSpec": {
      "type": "object",
      "required": [
        "off",
        "on"
      ],
      "properties": {
        "off": {
          "type": "string"
        },
        "on": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetFeatureFlagStateYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetFeatureFlagStateYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetFeatureFlagState"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetFeatureFlagStateYamlSpec": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOffVariationYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetOffVariationYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetOffVariation"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOffVariationYamlSpec": {
      "type": "object",
      "required": [
        "variation"
      ],
      "properties": {
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOnVariationYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetOnVariationYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetOnVariation"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOnVariationYamlSpec": {
      "type": "object",
      "required": [
        "variation"
      ],
      "properties": {
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ShellScriptBaseSource": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ShellScriptInlineSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ShellScriptBaseSource"
        },
        {
          "type": "object",
          "properties": {
            "script": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ShellScriptSourceWrapper": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Inline"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ShellScriptInlineSource"
              }
            }
          }
        }
      ]
    },
    "ShellScriptStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "onDelegate",
            "shell",
            "source"
          ],
          "properties": {
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>(\\.(allowedValues|regex)\\(.+?\\))*$",
                  "minLength": 1
                }
              ]
            },
            "environmentVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "executionTarget": {
              "$ref": "#/definitions/ExecutionTarget"
            },
            "metadata": {
              "type": "string"
            },
            "onDelegate": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "shell": {
              "type": "string",
              "enum": [
                "Bash",
                "PowerShell"
              ]
            },
            "source": {
              "$ref": "#/definitions/ShellScriptSourceWrapper"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StageRollbackFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StageRollback"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StageWhenCondition": {
      "type": "object",
      "required": [
        "pipelineStatus"
      ],
      "properties": {
        "condition": {
          "type": "string"
        },
        "pipelineStatus": {
          "type": "string",
          "enum": [
            "Success",
            "Failure",
            "All"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StepElementConfig": {
      "type": "object",
      "required": [
        "identifier",
        "name",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "failureStrategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureStrategyConfig"
          }
        },
        "identifier": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
        },
        "timeout": {
          "type": "string",
          "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
        },
        "type": {
          "type": "string"
        },
        "when": {
          "$ref": "#/definitions/StepWhenCondition"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "ArtifactoryUpload"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/UploadToArtifactoryStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Barrier"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BarrierStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BuildAndPushDockerRegistry"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DockerStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BuildAndPushECR"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ECRStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "BuildAndPushGCR"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GCRStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "FlagConfiguration"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/FlagConfigurationStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "GCSUpload"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/UploadToGCSStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "HarnessApproval"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/HarnessApprovalStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Http"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/HttpStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "JiraApproval"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JiraApprovalStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "JiraCreate"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JiraCreateStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "JiraUpdate"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JiraUpdateStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Plugin"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/PluginStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RestoreCacheGCS"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RestoreCacheGCSStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RestoreCacheS3"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RestoreCacheS3StepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Run"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RunStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RunTests"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/RunTestsStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "S3Upload"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/UploadToS3StepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "SaveCacheGCS"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SaveCacheGCSStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "SaveCacheS3"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SaveCacheS3StepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ServiceNowApproval"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ServiceNowApprovalStepInfo"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ShellScript"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ShellScriptStepInfo"
              }
            }
          }
        }
      ]
    },
    "StepGroupElementConfig": {
      "type": "object",
      "required": [
        "identifier",
        "steps"
      ],
      "properties": {
        "failureStrategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureStrategyConfig"
          }
        },
        "identifier": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionWrapperConfig"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "when": {
          "$ref": "#/definitions/StepWhenCondition"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StepGroupFailureActionConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/FailureStrategyActionConfig"
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StepGroupRollback"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StepSpecType": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StepWhenCondition": {
      "type": "object",
      "required": [
        "stageStatus"
      ],
      "properties": {
        "condition": {
          "type": "string"
        },
        "stageStatus": {
          "type": "string",
          "enum": [
            "Success",
            "Failure",
            "All"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StringNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "String"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TagBuildSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildSpec"
        },
        {
          "type": "object",
          "required": [
            "tag"
          ],
          "properties": {
            "tag": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TransitionTo": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string"
        },
        "transitionName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UnitTestReport": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JUnit"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "JUnit"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JUnitTestReport"
              }
            }
          }
        }
      ]
    },
    "UnitTestReportSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UpdateRuleYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/UpdateRuleYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "UpdateRule"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UpdateRuleYamlSpec": {
      "type": "object",
      "required": [
        "bucketBy",
        "ruleID"
      ],
      "properties": {
        "bucketBy": {
          "type": "string"
        },
        "ruleID": {
          "type": "string"
        },
        "serve": {
          "$ref": "#/definitions/Serve"
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariationYamlSpec"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UploadToArtifactoryStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "sourcePath",
            "target"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePath": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UploadToGCSStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "sourcePath"
          ],
          "properties": {
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePath": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UploadToS3StepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/StepSpecType"
        },
        {
          "type": "object",
          "required": [
            "bucket",
            "connectorRef",
            "sourcePath"
          ],
          "properties": {
            "bucket": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "sourcePath": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UseFromStageInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "useFromStage"
          ],
          "properties": {
            "useFromStage": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VariationYamlSpec": {
      "type": "object",
      "required": [
        "variation",
        "weight"
      ],
      "properties": {
        "variation": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmBuildJobInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildJobEnvInfo"
        },
        {
          "type": "object",
          "properties": {
            "ciExecutionArgs": {
              "$ref": "#/definitions/CIExecutionArgs"
            },
            "connectorRefs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stageVars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NGVariable"
              }
            },
            "volToMountPath": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "workDir": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmInfraSpec": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Pool"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmInfraYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Infrastructure"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "oneOf": [
                {
                  "$ref": "#/definitions/VmPoolYaml"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect",
                "UseFromStage",
                "VM"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmPoolYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/VmInfraSpec"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/VmPoolYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "Pool"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VmPoolYamlSpec": {
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookBaseAttributes": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "after": {
          "type": "string"
        },
        "authorAvatar": {
          "type": "string"
        },
        "authorEmail": {
          "type": "string"
        },
        "authorLogin": {
          "type": "string"
        },
        "authorName": {
          "type": "string"
        },
        "before": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookEvent": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PR",
            "BRANCH"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookExecutionSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionSource"
        },
        {
          "type": "object",
          "properties": {
            "triggerName": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/WebhookGitUser"
            },
            "webhookEvent": {
              "$ref": "#/definitions/WebhookEvent"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookGitUser": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gitId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WebhookTriggerExecutionInputSet": {
      "allOf": [
        {
          "$ref": "#/definitions/InputSet"
        },
        {
          "type": "object",
          "properties": {
            "payload": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WeightedVariation": {
      "type": "object",
      "required": [
        "variation",
        "weight"
      ],
      "properties": {
        "variation": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
}
load("@rules_java//java:defs.bzl", "java_binary")
load("//:tools/bazel/GenTestRules.bzl", "run_tests")
load("//:tools/bazel/macros.bzl", "run_analysis")

HarnessTeam = "CE"

shared_dependencies = [
    "@batch//:com_fasterxml_jackson_core_jackson_databind",
    "@batch//:com_squareup_okhttp3_okhttp",
] + [
    "//350-event-server:module",
    "//374-ceng-graphql:module",
    "//375-ce-graphql:module",
    "//380-cg-graphql:module",
    "//400-rest:module",
    "//450-ce-views:module",
    "//480-pricing-service:module",
    "//490-ce-commons:module",
    "//920-delegate-service-beans:module",
    "//940-feature-flag:module",
    "//950-delegate-tasks-beans:module",
    "//950-events-framework:module",
    "//950-telemetry:module",
    "//955-delegate-beans:module",
    "//959-psql-database-models:module",
    "//960-continuous-features:module",
    "//960-persistence:module",
    "//970-grpc:module",
    "//970-ng-commons:module",
    "//970-rbac-core:module",
    "//970-telemetry-beans:module",
    "//:lombok",
    "@maven//:ch_qos_logback_logback_access",
    "@maven//:ch_qos_logback_logback_classic",
    "@maven//:ch_qos_logback_logback_core",
    "@maven//:com_amazonaws_aws_java_sdk_cloudwatch",
    "@maven//:com_amazonaws_aws_java_sdk_ecs",
    "@maven//:com_amazonaws_aws_java_sdk_organizations",
    "@maven//:com_amazonaws_aws_java_sdk_sts",
    "@maven//:com_azure_azure_identity",
    "@maven//:com_azure_azure_storage_blob",
    "@maven//:com_azure_azure_storage_common",
    "@maven//:com_google_cloud_google_cloud_bigquery",
    "@maven//:com_google_cloud_google_cloud_bigquerydatatransfer",
    "@maven//:com_google_cloud_google_cloud_storage",
    "@maven//:com_google_code_gson_gson",
    "@maven//:com_google_guava_guava",
    "@maven//:com_google_inject_guice",
    "@maven//:com_healthmarketscience_sqlbuilder_sqlbuilder",
    "@maven//:com_microsoft_azure_msal4j",
    "@maven//:com_openpojo_openpojo",
    "@maven//:com_segment_analytics_java_analytics",
    "@maven//:com_slack_api_slack_api_client",
    "@maven//:com_slack_api_slack_api_model",
    "@maven//:io_github_resilience4j_resilience4j_circuitbreaker",
    "@maven//:io_github_resilience4j_resilience4j_core",
    "@maven//:io_github_resilience4j_resilience4j_retrofit",
    "@maven//:io_github_resilience4j_resilience4j_retry",
    "@maven//:io_opencensus_opencensus_api",
    "@maven//:io_opencensus_opencensus_impl",
    "@maven//:io_opencensus_opencensus_exporter_stats_stackdriver",
    "@maven//:io_vavr_vavr",
    "@maven//:javax_ws_rs_javax_ws_rs_api",
    "@maven//:org_apache_avro_avro",
    "@maven//:org_apache_commons_commons_email",
    "@maven//:org_apache_commons_commons_math3",
    "@maven//:org_apache_httpcomponents_httpclient",
    "@maven//:org_apache_httpcomponents_httpcore",
    "@maven//:org_apache_logging_log4j_log4j_api",
    "@maven//:org_apache_logging_log4j_log4j_to_slf4j",
    "@maven//:org_jetbrains_kotlin_kotlin_stdlib",
    "@maven//:org_mongodb_mongo_java_driver",
    "@maven//:org_projectlombok_lombok",
    "@maven//:org_slf4j_jcl_over_slf4j",
    "@maven//:org_slf4j_jul_to_slf4j",
    "@maven//:org_slf4j_log4j_over_slf4j",
    "@maven//:org_slf4j_slf4j_api",
    "@maven//:org_springframework_batch_spring_batch_core",
    "@maven//:org_springframework_batch_spring_batch_infrastructure",
    "@maven//:org_springframework_boot_spring_boot",
    "@maven//:org_springframework_boot_spring_boot_autoconfigure",
    "@maven//:org_springframework_boot_spring_boot_starter_batch",
    "@maven//:org_springframework_data_spring_data_mongodb",
    "@maven//:org_springframework_guice_spring_guice",
    "@maven//:org_zeroturnaround_zt_exec",
    "@maven//:software_amazon_awssdk_athena",
    "@maven//:software_amazon_awssdk_auth",
]

java_binary(
    name = "module",
    srcs = glob([
        "src/main/java/**/*.java",
        "src/generated/java/**/*.java",
    ]),
    data = ["//:resource"],
    main_class = "io.harness.batch.processing.BatchProcessingApplication",
    resources = [
        "//280-batch-processing/src/main/resources:resource",
    ],
    visibility = ["//visibility:public"],
    deps = shared_dependencies,
)

java_library(
    name = "supporter-test",
    testonly = True,
    srcs = glob(["src/supporter-test/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        ":module",
        "//990-commons-test:module",
        "@maven//:com_slack_api_slack_api_client",
        "@maven//:com_slack_api_slack_api_model",
        "@maven//:org_springframework_batch_spring_batch_core",
    ],
)

filegroup(
    name = "resource",
    srcs = ["batch-processing-config.yml"],
)

java_library(
    name = "tests",
    testonly = True,
    srcs = glob(["src/test/**/*.java"]),
    data = [
        "resource",
        "//:resource",
    ],
    resources = [
        "//280-batch-processing/src/main/resources:resource",
        "//280-batch-processing/src/test/resources:resource",
    ],
    visibility = ["//visibility:public"],
    deps = shared_dependencies + [
        ":module",
        ":supporter-test",
        "//400-rest:supporter-test",
        "//960-persistence:supporter-test",
        "//990-commons-test:module",
        "@maven//:junit_junit",
        "@maven//:org_assertj_assertj_core",
        "@maven//:org_mockito_mockito_core",
        "@maven//:org_powermock_powermock_api_mockito",
        "@maven//:org_powermock_powermock_module_junit4",
        "@maven//:org_springframework_boot_spring_boot_starter_test",
    ],
)

run_tests()

run_analysis()

exports_files([
    "batch-processing-config.yml",
])
